<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:mate="http://mate.asfusion.com/"
		 width="90%"
		 paddingLeft="12"
		 paddingRight="12"
		 verticalScrollPolicy="off"
		 horizontalScrollPolicy="off"
		 toolTip="{data as String}"
		 verticalAlign="middle">

	<fx:Script>
		<![CDATA[
			import com.asfusion.mate.events.Dispatcher;

			import org.as3commons.logging.api.ILogger;
			import org.as3commons.logging.api.getClassLogger;
			import org.bigbluebutton.modules.present.commands.ChangePresentationCommand;
			import org.bigbluebutton.modules.present.events.RemovePresentationEvent;
			import org.bigbluebutton.modules.present.events.SetPresentationDownloadableEvent;
			import org.bigbluebutton.modules.present.events.UploadEvent;
			import org.bigbluebutton.util.i18n.ResourceUtil;

			private static const LOGGER:ILogger = getClassLogger(UploadedPresentationRenderer);

			private var globalDispatch:Dispatcher = new Dispatcher();

			private function showPresentation():void {
				var changePresCommand:ChangePresentationCommand = new ChangePresentationCommand(data.podId, data.presId);
				globalDispatch.dispatchEvent(changePresCommand);

				globalDispatch.dispatchEvent(new UploadEvent(UploadEvent.CLOSE_UPLOAD_WINDOW, data.podId));
			}

			private function deletePresentation():void {
				LOGGER.debug("FileUploadWindow.mxml::deletePresentation() {0}", [data.presId]);

				var rEvent:RemovePresentationEvent = new RemovePresentationEvent(RemovePresentationEvent.REMOVE_PRESENTATION_EVENT, data.podId);
				rEvent.presentationName = data.presId as String;
				dispatchEvent(rEvent);
			}

			protected function switchDownloadableBtn_clickHandler(event:MouseEvent):void {
				var dEvent:SetPresentationDownloadableEvent = new SetPresentationDownloadableEvent(SetPresentationDownloadableEvent.SET_DOWNLOADABLE);
				dEvent.presentationName = data.presId as String;
				dEvent.podId = data.podId as String;
				dEvent.downloadable = !data.downloadable as Boolean;
				dispatchEvent(dEvent)
			}
		]]>
	</fx:Script>
	<mx:Label id="presentationNameLabel"
			  width="{this.width-showBtn.width-deleteBtn.width-switchDownloadableBtn.width-50}"
			  truncateToFit="true"
			  styleName="presentationNameLabel"
			  text="{data.presName as String}" />
	<mx:Button id="switchDownloadableBtn"
			   height="32"
			   label="{data.downloadable as Boolean ? ResourceUtil.getInstance().getString('bbb.fileupload.doNotAllowDownload') : ResourceUtil.getInstance().getString('bbb.fileupload.allowDownload')}"
			   toolTip="{data.downloadable as Boolean ? ResourceUtil.getInstance().getString('bbb.fileupload.doNotAllowDownload.tooltip') : ResourceUtil.getInstance().getString('bbb.fileupload.allowDownload.tooltip')}"
			   click="switchDownloadableBtn_clickHandler(event)" />
	<mx:Button id="showBtn"
			   height="32"
			   label="{ResourceUtil.getInstance().getString('bbb.fileupload.showBtn')}"
			   toolTip="{ResourceUtil.getInstance().getString('bbb.fileupload.showBtn.toolTip')}"
			   styleName="presentationUploadShowButtonStyle"
			   click="showPresentation()"
			   enabled="{!data.presCurrent}" />
	<mx:Button id="deleteBtn"
			   height="32"
			   toolTip="{ResourceUtil.getInstance().getString('bbb.fileupload.deleteBtn.toolTip')}"
			   styleName="presentationUploadDeleteButtonStyle"
			   click="deletePresentation()"
			   visible="{String(data.presName) != 'default.pdf'}" />

</mx:HBox>
