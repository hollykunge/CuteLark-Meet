@import "/imports/ui/stylesheets/variables/_all";
@import '/imports/ui/stylesheets/mixins/_indicators';

%list {
  list-style: none;
  font-size: var(--font-size-base);
  margin: 0;
  padding: 0;
  text-align: left;
  color: var(--color-gray-dark);
  display: flex;
  overflow-wrap: break-word;
  white-space: pre-line;

  [dir="rtl"] & {
    text-align: right;
  }

  @include mq($small-only) {
    font-size: calc(var(--font-size-large) * 1.1);
    padding: var(--line-height-computed);
  }
}

.verticalList {
  @extend %list;
  flex-direction: column;
}

.horizontalList {
  @extend %list;
  padding: 0;
  flex-direction: row;
  @include mq($small-only) {
    flex-direction: column;
    padding: var(--line-height-computed);
  }
}

.title {
  color: var(--color-gray);
  font-weight: 600;
  width: 100%;
}

.separator {
  display: flex;
  flex: 1 1 100%;
  height: 1px;
  min-height: 1px;
  background-color: var(--color-gray-lighter);
  padding: 0;
  margin-top: calc(var(--line-height-computed) * .5);
  margin-bottom: calc(var(--line-height-computed) * .5);
}

.item {
  display: flex;
  flex: 1 1 100%;

  @include mq($small-only) {
    justify-content: center;
  }

  .verticalList & {
    padding: calc(var(--line-height-computed) / 3) 0;

    @include mq($small-only) {
      padding: calc(var(--line-height-computed) / 1.5) 0;
    }
  }

  .horizontalList & {
    padding: 0 calc(var(--line-height-computed) / 3);

    @include mq($small-only) {
      padding: calc(var(--line-height-computed) / 1.5) 0;
    }
  }

  &:hover,
  &:focus {
    @include highContrastOutline();
    cursor: pointer;
    background-color: var(--color-primary);
    color: var(--color-white);

    .verticalList & {
      margin-left: -.25rem;
      margin-right: -.25rem;
      padding-left: .25rem;
      padding-right: .25rem;

      [dir="rtl"] & {
        margin-right: -.25rem;
        margin-left: -.25rem;
        padding-right: .25rem;
        padding-left: .25rem;
      }
    }

    .horizontalList & {
      margin-top: calc((var(--line-height-computed) / 2) * -1);
      margin-bottom: calc((var(--line-height-computed) / 2) * -1);
      padding-top: calc(var(--line-height-computed) / 2);
      padding-bottom: calc(var(--line-height-computed) / 2);

      @include mq($small-only) {
        margin: 0;
        padding: calc(var(--line-height-computed) / 1.5) 0;
        margin-left: calc((var(--line-height-computed) / 2) * -1);
        margin-right: calc((var(--line-height-computed) / 2) * -1);
        padding-left: calc(var(--line-height-computed) / 2);
        padding-right: calc(var(--line-height-computed) / 2);
      }
    }

    @include mq($small-only) {
      border-radius: 0.2rem;
    }

    .iconRight,
    .itemIcon,
    .itemLabel {
      color: inherit;
    }
  }

  &:focus {
    box-shadow: 0 0 0 2px var(--color-white), 0 0 2px 4px rgba(var(--color-primary), .4);
    outline-style: solid;
  }
}

.iconRight,
.itemIcon {
  margin: 0 calc(var(--line-height-computed) / 2) 0 0;
  color: var(--color-text);
  flex: 0 0;

  [dir="rtl"] & {
    margin: 0 0 0 calc(var(--line-height-computed) / 2);
  }
}

.iconRight {
  margin-right: 0;
  margin-left: 1rem;
  font-size: 12px;
  line-height: 16px;

  [dir="rtl"] & {
    margin-left: 0;
    margin-right: 1rem;
    -webkit-transform: scale(-1, 1);
    -moz-transform: scale(-1, 1);
    -ms-transform: scale(-1, 1);
    -o-transform: scale(-1, 1);
    transform: scale(-1, 1);
  }
}

.itemLabel {
  color: var(--color-gray-dark);
  font-size: 90%;
  flex: 1;
}
