@import "/imports/ui/stylesheets/variables/_all";
@import "/imports/ui/stylesheets/mixins/_scrollable";

input[type="number"]::-webkit-outer-spin-button, input[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
}

.btnStyle > button > span {
  padding-bottom: var(--border-size);
}

.btnStyle > button > span > i {
  color: var(--color-gray);
  width: var(--lg-padding-x);
  height: var(--lg-padding-x);
  font-size: 170% !important;
}

.subTitle {
  font-size: var(--font-size-base);
  text-align: justify;
  color: var(--color-gray);
}

.breakoutSettings {
  display: grid;
  grid-template-columns: 2fr 2fr 1fr; 
  grid-template-rows: 1fr;
  grid-gap: 1rem;

  @include mq($small-only) {
    grid-template-columns: 1fr ;
    grid-template-rows: 1fr 1fr 1fr; 
    flex-direction: column;
  }
}

.content {
  display: flex;
  flex-direction: column;
}

.labelText {
  color: var(--color-gray);
  white-space: nowrap;
  margin-bottom: .5rem;
}
.duration,
.inputRooms {
  background-color: var(--color-white);
  color: var(--color-gray);
  border: 1px solid var(--color-gray-lighter);
  border-radius: var(--border-radius);
  width: 100%;
  padding-top: .25rem;
  padding-bottom: .25rem;
  padding: .25rem 0 .25rem .25rem;
}

.duration {
  width: 50%;
  text-align: center;
  padding: .25rem;
  &::placeholder {
    color: var(--color-gray);
    opacity: 1;
  }
}

.iconsColor {
  cursor: pointer;
  color: var(--color-gray-light);
  font-size: var(--font-size-large);
  @include mq($small-only) {
    font-size: 2rem;
    margin: 0 0 0 .5rem;
    [dir="rtl"] & {
      margin: 0 .5rem 0 0;
    }
  }
}

.durationArea {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.randomlyAssignBtn {
  color: var(--color-primary);
  font-size: var(--font-size-small);
  white-space: nowrap;
  margin: 0 auto 0 0;
  align-self: flex-end;

  [dir="rtl"] & {
    margin: 0 0 0 auto;
  }
}

.freeJoinCheckbox {
  width: 1rem;
  height: 1rem;
}

.freeJoinLabel {
  display: flex;
  align-items: center;
  font-size: var(--font-size-small);
  & > * {
    margin: 0 .5rem 0 0;

    [dir="rtl"] & {
      margin: 0 0 0 .5rem;
    }
  }
}

.boxContainer {
  display: grid;
  grid-template-columns: repeat(3, minmax(4rem, 16rem));
  grid-template-rows: repeat(auto-fill, minmax(4rem, 8rem));
  grid-gap: 1.5rem 1rem;
  box-sizing: border-box;
  padding-bottom: 1rem;
}

.changeToWarn {
  position: relative;
  & > .breakoutBox {
    border-color: var(--color-danger) !important;
  }

  & > .freeJoinLabel {
    color: var(--color-danger);
  }
}

.breakoutBox {
  @include scrollbox-vertical();
  width: 100%;
  height: 80%;
  min-height: 4rem;
  max-height: 8rem;
  border: 1px solid var(--color-gray-lighter);
  border-radius: var(--border-radius); 
}

.freeJoinLabel {
  font-size: var(--font-size-small);
  font-weight: bolder;
}

.leastOneWarn {
  margin: .25rem;
  position: absolute;
  font-size: var(--font-size-small);
  color: var(--color-danger);
  font-weight: 200;
  white-space: nowrap;
}

.roomUserItem {
  width: 11rem;
  margin: 0;
  padding: .25rem 0 .25rem .25rem;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  cursor: pointer;

  [dir="rtl"] & {
    padding: .25rem .25rem .25rem 0;
  }
}

.selectedItem {
  background-color: var(--color-primary);
  color: var(--color-white)
}

/* mobile */

.listContainer {
  display: flex;
  justify-content: flex-start;
  flex-direction: column;
}

.itemTitle {
  color: var(--color-blue-light);
  margin: 0;
}

.roomItem {
  margin: 1rem 0 1rem 0;

}

.itemButton {
  padding: 0;
  outline: none !important;
  span {
    color: var(--color-blue-light);
  }
}

.selectUserScreenContainer {
  position: fixed;
  z-index: 1002;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: rgba(0, 0, 0, .85);
}

.selectUserScreen {
  position: fixed;
  display: block;
  height: 100vh;
  width: 100%;
  background-color: var(--color-white);
  z-index: 1002;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

.header {
  display: flex;
  padding: var(--line-height-computed) 0;
  border-bottom: var(--border-size) solid var(--color-gray-lighter);
  margin: 0 1rem 0 1rem;
}

.title {
  @extend %text-elipsis;
  align-content: flex-end;
  flex: 1;
  margin: 0;
  font-weight: 400;
}

.buttonAdd {
  flex: 0 1 35%;
}

.selectUserContainer {
  margin: 1.5rem 1rem;
}

.textName {
  @extend %text-elipsis;
  margin-left: 1.5rem;
}

.round {
  position: relative;

  & label {
    margin-top: -10px;
    background-color: #fff;
    border: 1px solid #ccc;
    border-radius: 50%;
    cursor: pointer;
    height: 28px;
    left: 0;
    right : auto;
    position: absolute;
    top: 0;
    width: 28px;

    [dir="rtl"] & {
      left : auto;
      right: 0;
    }
  }

  & label:after {
    border: {
      style: solid;
      color:  #fff;
      width: 2px;
      right: {
        style : none;
      }
      top: {
        style: none;
      }
    }
    content: "";
    height: 6px;
    left: 7px;
    opacity: 0;
    position: absolute;
    top: 8px;
    transform: rotate(-45deg);
    width: 12px;

    [dir="rtl"] & {
      border: {
        style: solid;
        color:  #fff;
        width: 2px;
        left: {
          style : none;
        }
        top: {
          style: none;
        }
      }
    }
  }

  & input[type="checkbox"] {
    visibility: hidden;
  }

  & input[type="checkbox"]:checked + label {
    background-color: #66bb6a;
    border-color: #66bb6a;
  }

  & input[type="checkbox"]:checked + label:after {
    opacity: 1;
  }
}

.dontShow {
  display: none;
}

.checkBoxesContainer {
  display: flex;
  flex-direction: row;
  margin-top: 1rem;
}

.withError {
  color: var(--color-danger);
}

.errorBorder {
  border-color: var(--color-danger) !important;
}